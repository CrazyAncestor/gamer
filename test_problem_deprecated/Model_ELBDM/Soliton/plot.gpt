# -----------------------------------------------------------
# GNUPLOT template 1D v1.1
# -----------------------------------------------------------


reset


# target files
# -----------------------------------------------------------
FILE_IN_PREFIX  = 'Xline_y192.000_z192.000'
FILE_IN_SUFFIX  = ''
FILE_OUT_PREFIX = 'Fig__XXX'
START_ID        = 0
END_ID          = 50
DELTA_ID        = 1
PAUSE           = -0.2   # <= 0.0 --> mouse


# terminal
# -----------------------------------------------------------
 set term x11 enhanced
#set term png enhanced crop size 1280,800
#set term postscript eps enhanced color 'Helvetica' 16


# plot style
# -----------------------------------------------------------
#set log xy
 set key reverse Left spacing 2 right
#set key reverse Left spacing 1 at first 1.5e2, 1e8
#set xlabel "r (kpc)"
#set ylabel "Density"
#set format x "10^{%T}"
#set format y "10^{%T}"
 set pointsize 1.0
 set size square
 set yrange [-0.02:0.02]
 set xrange [0:100]


# constants
# -----------------------------------------------------------
#REF_SOLITON      = './SolitonRefSolution'
#SOLITON_DENS_MAX = 2.36390677531253
#H0               = 0.7
#NEWTON_G         = 3.3840321e-02
#ETA              = 6.0506411e+03
#MPC2KPC_H0       = 1.0e3/H0


# set the output file extension automatically
# -----------------------------------------------------------
if      ( GPVAL_TERM eq 'pngcairo'   ) FILE_OUT_EXT='png'; \
else if ( GPVAL_TERM eq 'postscript' ) FILE_OUT_EXT='eps'; \
else if ( GPVAL_TERM ne 'x11'        ) print 'Unkown terminal for settting the output file extension !!'; quit



# loop over all files
# -----------------------------------------------------------
print "Start plotting ..."

do for [ID=START_ID:END_ID:DELTA_ID] {

#  set the input and output filenames
   ID1     = ID%10
   ID2     = (ID%100)/10
   ID3     = (ID%1000)/100
   ID4     = ID/1000
   FILE_IN = sprintf( '%s_00%d%d%d%d%s', FILE_IN_PREFIX, ID4, ID3, ID2, ID1, FILE_IN_SUFFIX )

   if ( GPVAL_TERM ne 'x11' ) { set output sprintf( '%s_00%d%d%d%d.%s', FILE_OUT_PREFIX, ID4, ID3, ID2, ID1, FILE_OUT_EXT ) }


#  load the physical time
   DUMP_TABLE   = './Record__Dump'
   NHEADER      = 1
   LOAD_TIME    = sprintf( "awk '{if(NR==%d+%d) {print $2}}' %s", NHEADER, ID+1, DUMP_TABLE  )
   TIME         = system( LOAD_TIME )*1.0    # *1.0 --> convert string to number


#  set title
   set title sprintf( 'DataID %d%d%d%d (t = %5.2f)', ID4, ID3, ID2, ID1, TIME )
   print sprintf( '   Plotting DataID %d%d%d%d (t = %5.2f) ...', ID4, ID3, ID2, ID1, TIME )


#  plot
   first = 0

scale=0.1

   plot FILE_IN u (abs($4-192.0)):($7**0.5) w lp pt 6 lc  7 title 'Dens^{0.5}' \
       ,FILE_IN u (abs($4-192.0)):($8     ) w lp pt 7 lc  8 title 'Real' \
       ,FILE_IN u (abs($4-192.0)):($9     ) w lp pt 8 lc  9 title 'Imag' \
       ,'Input__SolitonDensProfile' u ($1/scale):($2**0.5*scale**2) w l       lc -1 title 'Analytical'


   if ( GPVAL_TERM eq 'x11' ) { if ( PAUSE <= 0.0 ) { pause mouse }   else { pause PAUSE } };

} #do for [ID=START_ID:END_ID:DELTA_ID] 


print "Done";
if ( GPVAL_TERM eq 'x11' ) { pause -1 };


